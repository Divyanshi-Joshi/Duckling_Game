{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\duckling-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport GameHeader from \"./components/GameHeader\";\nimport GameFooter from \"./components/GameFooter\";\nimport GameBoard from \"./components/GameBoard\";\nimport Sidebar from \"./components/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst welcomeStyle = {\n  textAlign: \"center\",\n  fontSize: \"2em\",\n  marginTop: \"50px\"\n};\nfunction App() {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [coins, setCoins] = useState(0);\n  // Add a new state for game over\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  // Update the startGame function\n  const startGame = () => {\n    setGameStarted(true);\n    setScore(0);\n    setLives(3);\n    setCoins(0);\n    setIsGameOver(false);\n    console.log(\"Game Started!\");\n  };\n\n  // Add a new function to handle game over\n  const handleGameOver = () => {\n    setIsGameOver(true);\n    setGameStarted(false);\n  };\n\n  // Update the JSX to include the game over state and pass the new prop to GameBoard\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      title: \"Duckling Game\",\n      score: score,\n      lives: lives,\n      coins: coins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), gameStarted ? /*#__PURE__*/_jsxDEV(GameBoard, {\n        setScore: setScore,\n        setLives: setLives,\n        setCoins: setCoins,\n        score: score,\n        lives: lives,\n        coins: coins,\n        onGameOver: handleGameOver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : isGameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: welcomeStyle,\n        children: \"Game Over! Click \\\"Start Game\\\" to play again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: welcomeStyle,\n        children: \"Welcome! Click \\\"Start Game\\\" to begin.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameFooter, {\n      onStart: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SJ1BSQqxi1iidsWBF4eLMWt80u0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","GameHeader","GameFooter","GameBoard","Sidebar","jsxDEV","_jsxDEV","welcomeStyle","textAlign","fontSize","marginTop","App","_s","gameStarted","setGameStarted","score","setScore","lives","setLives","coins","setCoins","isGameOver","setIsGameOver","startGame","console","log","handleGameOver","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onGameOver","style","onStart","_c","$RefreshReg$"],"sources":["E:/project/duckling-game/src/App.js"],"sourcesContent":["import { useState } from \"react\"\nimport GameHeader from \"./components/GameHeader\"\nimport GameFooter from \"./components/GameFooter\"\nimport GameBoard from \"./components/GameBoard\"\nimport Sidebar from \"./components/Sidebar\"\n\nconst welcomeStyle = {\n  textAlign: \"center\",\n  fontSize: \"2em\",\n  marginTop: \"50px\",\n}\n\nfunction App() {\n  const [gameStarted, setGameStarted] = useState(false)\n  const [score, setScore] = useState(0)\n  const [lives, setLives] = useState(3)\n  const [coins, setCoins] = useState(0)\n  // Add a new state for game over\n  const [isGameOver, setIsGameOver] = useState(false)\n\n  // Update the startGame function\n  const startGame = () => {\n    setGameStarted(true)\n    setScore(0)\n    setLives(3)\n    setCoins(0)\n    setIsGameOver(false)\n    console.log(\"Game Started!\")\n  }\n\n  // Add a new function to handle game over\n  const handleGameOver = () => {\n    setIsGameOver(true)\n    setGameStarted(false)\n  }\n\n  // Update the JSX to include the game over state and pass the new prop to GameBoard\n  return (\n    <div className=\"app-container\">\n      <GameHeader title=\"Duckling Game\" score={score} lives={lives} coins={coins} />\n      <div className=\"content\">\n        <Sidebar />\n        {gameStarted ? (\n          <GameBoard\n            setScore={setScore}\n            setLives={setLives}\n            setCoins={setCoins}\n            score={score}\n            lives={lives}\n            coins={coins}\n            onGameOver={handleGameOver}\n          />\n        ) : isGameOver ? (\n          <div style={welcomeStyle}>Game Over! Click \"Start Game\" to play again.</div>\n        ) : (\n          <div style={welcomeStyle}>Welcome! Click \"Start Game\" to begin.</div>\n        )}\n      </div>\n      <GameFooter onStart={startGame} />\n    </div>\n  )\n}\n\nexport default App\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}