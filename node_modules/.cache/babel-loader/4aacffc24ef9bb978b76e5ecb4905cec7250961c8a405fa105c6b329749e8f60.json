{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\duckling-game\\\\src\\\\components\\\\GameBoard.js\";\n// src/components/GameBoard.js\nimport React from 'react';\nimport './GameBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = () => {\n  // Define the total number of blocks for the platform\n  const totalBlocks = 20; // Adjust as needed for screen width\n\n  // Determine which blocks should be red\n  // For example, every 5th block is red\n  const redBlockIndices = [4, 9, 14, 19]; // Zero-based indices\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"platform\",\n      children: Array.from({\n        length: totalBlocks\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `block ${redBlockIndices.includes(index) ? 'red' : 'blue'}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameBoard","totalBlocks","redBlockIndices","className","children","Array","from","length","map","_","index","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/project/duckling-game/src/components/GameBoard.js"],"sourcesContent":["// src/components/GameBoard.js\r\nimport React from 'react';\r\nimport './GameBoard.css';\r\n\r\nconst GameBoard = () => {\r\n  // Define the total number of blocks for the platform\r\n  const totalBlocks = 20; // Adjust as needed for screen width\r\n\r\n  // Determine which blocks should be red\r\n  // For example, every 5th block is red\r\n  const redBlockIndices = [4, 9, 14, 19]; // Zero-based indices\r\n\r\n  return (\r\n    <div className=\"game-board\">\r\n      {/* Platforms */}\r\n      <div className=\"platform\">\r\n        {Array.from({ length: totalBlocks }).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className={`block ${redBlockIndices.includes(index) ? 'red' : 'blue'}`}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;EACA,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;;EAExB;EACA;EACA,MAAMC,eAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;EAExC,oBACEH,OAAA;IAAKI,SAAS,EAAC,YAAY;IAAAC,QAAA,eAEzBL,OAAA;MAAKI,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEN;MAAY,CAAC,CAAC,CAACO,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAChDX,OAAA;QAEEI,SAAS,EAAE,SAASD,eAAe,CAACS,QAAQ,CAACD,KAAK,CAAC,GAAG,KAAK,GAAG,MAAM;MAAG,GADlEA,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GArBIhB,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}