{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\duckling-game\\\\src\\\\components\\\\GameBoard.js\",\n  _s = $RefreshSig$();\n// src/components/GameBoard.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './GameBoard.css';\nimport Duckling from './Duckling';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = () => {\n  _s();\n  const gameBoardRef = useRef(null);\n  const ducklingRef = useRef(null);\n\n  // Duckling position states\n  const [leftPosition, setLeftPosition] = useState(50); // Initial left position in px\n  const [isJumping, setIsJumping] = useState(false);\n  const [jumpHeight, setJumpHeight] = useState(0);\n  const jumpPeak = 150; // Maximum jump height in px\n  const jumpSpeed = 5; // Adjust for jump speed\n  const moveSpeed = 5; // Pixels to move per key press\n\n  // Key press state\n  const keysPressed = useRef({});\n  useEffect(() => {\n    // Key down handler\n    const handleKeyDown = e => {\n      keysPressed.current[e.code] = true;\n    };\n\n    // Key up handler\n    const handleKeyUp = e => {\n      keysPressed.current[e.code] = false;\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Game loop\n    const gameLoop = setInterval(() => {\n      // Move Left\n      if (keysPressed.current['ArrowLeft'] || keysPressed.current['KeyA']) {\n        setLeftPosition(prev => Math.max(prev - moveSpeed, 0));\n      }\n      // Move Right\n      if (keysPressed.current['ArrowRight'] || keysPressed.current['KeyD']) {\n        setLeftPosition(prev => Math.min(prev + moveSpeed, gameBoardRef.current.clientWidth - 50) // 50 is the duckling width\n        );\n      }\n      // Jump\n      if ((keysPressed.current['Space'] || keysPressed.current['Spacebar']) && !isJumping) {\n        setIsJumping(true);\n      }\n    }, 20); // Adjust game loop speed as needed\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      clearInterval(gameLoop);\n    };\n  }, [isJumping]);\n  useEffect(() => {\n    let jumpInterval;\n    if (isJumping) {\n      jumpInterval = setInterval(() => {\n        setJumpHeight(prev => {\n          if (prev >= jumpPeak) {\n            // Start descending\n            clearInterval(jumpInterval);\n            const descendInterval = setInterval(() => {\n              setJumpHeight(prevDescend => {\n                if (prevDescend <= 0) {\n                  clearInterval(descendInterval);\n                  setIsJumping(false);\n                  return 0;\n                }\n                return prevDescend - jumpSpeed;\n              });\n            }, 20);\n            return prev;\n          }\n          return prev + jumpSpeed;\n        });\n      }, 20);\n    }\n    return () => clearInterval(jumpInterval);\n  }, [isJumping, jumpSpeed, jumpPeak]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    ref: gameBoardRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"platform\",\n      children: Array.from({\n        length: 20\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `block ${[4, 9, 14, 19].includes(index) ? 'red' : 'blue'}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Duckling, {\n      ref: ducklingRef,\n      style: {\n        left: `${leftPosition}px`,\n        transform: `translateY(-${jumpHeight}px)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"20xxH7dLagMCW8t6/fqcTlCmkS8=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Duckling","jsxDEV","_jsxDEV","GameBoard","_s","gameBoardRef","ducklingRef","leftPosition","setLeftPosition","isJumping","setIsJumping","jumpHeight","setJumpHeight","jumpPeak","jumpSpeed","moveSpeed","keysPressed","handleKeyDown","e","current","code","handleKeyUp","window","addEventListener","gameLoop","setInterval","prev","Math","max","min","clientWidth","removeEventListener","clearInterval","jumpInterval","descendInterval","prevDescend","className","ref","children","Array","from","length","map","_","index","includes","fileName","_jsxFileName","lineNumber","columnNumber","style","left","transform","_c","$RefreshReg$"],"sources":["E:/project/duckling-game/src/components/GameBoard.js"],"sourcesContent":["// src/components/GameBoard.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './GameBoard.css';\r\nimport Duckling from './Duckling';\r\n\r\nconst GameBoard = () => {\r\n  const gameBoardRef = useRef(null);\r\n  const ducklingRef = useRef(null);\r\n\r\n  // Duckling position states\r\n  const [leftPosition, setLeftPosition] = useState(50); // Initial left position in px\r\n  const [isJumping, setIsJumping] = useState(false);\r\n  const [jumpHeight, setJumpHeight] = useState(0);\r\n  const jumpPeak = 150; // Maximum jump height in px\r\n  const jumpSpeed = 5; // Adjust for jump speed\r\n  const moveSpeed = 5; // Pixels to move per key press\r\n\r\n  // Key press state\r\n  const keysPressed = useRef({});\r\n\r\n  useEffect(() => {\r\n    // Key down handler\r\n    const handleKeyDown = (e) => {\r\n      keysPressed.current[e.code] = true;\r\n    };\r\n\r\n    // Key up handler\r\n    const handleKeyUp = (e) => {\r\n      keysPressed.current[e.code] = false;\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    // Game loop\r\n    const gameLoop = setInterval(() => {\r\n      // Move Left\r\n      if (keysPressed.current['ArrowLeft'] || keysPressed.current['KeyA']) {\r\n        setLeftPosition((prev) => Math.max(prev - moveSpeed, 0));\r\n      }\r\n      // Move Right\r\n      if (keysPressed.current['ArrowRight'] || keysPressed.current['KeyD']) {\r\n        setLeftPosition((prev) =>\r\n          Math.min(prev + moveSpeed, gameBoardRef.current.clientWidth - 50) // 50 is the duckling width\r\n        );\r\n      }\r\n      // Jump\r\n      if (\r\n        (keysPressed.current['Space'] || keysPressed.current['Spacebar']) &&\r\n        !isJumping\r\n      ) {\r\n        setIsJumping(true);\r\n      }\r\n    }, 20); // Adjust game loop speed as needed\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      clearInterval(gameLoop);\r\n    };\r\n  }, [isJumping]);\r\n\r\n  useEffect(() => {\r\n    let jumpInterval;\r\n    if (isJumping) {\r\n      jumpInterval = setInterval(() => {\r\n        setJumpHeight((prev) => {\r\n          if (prev >= jumpPeak) {\r\n            // Start descending\r\n            clearInterval(jumpInterval);\r\n            const descendInterval = setInterval(() => {\r\n              setJumpHeight((prevDescend) => {\r\n                if (prevDescend <= 0) {\r\n                  clearInterval(descendInterval);\r\n                  setIsJumping(false);\r\n                  return 0;\r\n                }\r\n                return prevDescend - jumpSpeed;\r\n              });\r\n            }, 20);\r\n            return prev;\r\n          }\r\n          return prev + jumpSpeed;\r\n        });\r\n      }, 20);\r\n    }\r\n    return () => clearInterval(jumpInterval);\r\n  }, [isJumping, jumpSpeed, jumpPeak]);\r\n\r\n  return (\r\n    <div className=\"game-board\" ref={gameBoardRef}>\r\n      {/* Platforms */}\r\n      <div className=\"platform\">\r\n        {Array.from({ length: 20 }).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className={`block ${[4, 9, 14, 19].includes(index) ? 'red' : 'blue'}`}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      {/* Duckling */}\r\n      <Duckling\r\n        ref={ducklingRef}\r\n        style={{\r\n          left: `${leftPosition}px`,\r\n          transform: `translateY(-${jumpHeight}px)`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}