{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\duckling-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from 'react';\nimport GameHeader from './components/GameHeader';\nimport GameBoard from './components/GameBoard';\nimport Sidebar from './components/Sidebar';\nimport GameFooter from './components/GameFooter';\nimport MainScreen from './components/MainScreen'; // New component\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State variables\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [coins, setCoins] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  // Handler to start the game\n  const startGame = () => {\n    setGameStarted(true);\n    setIsGameOver(false);\n    setScore(0);\n    setLives(3);\n    setCoins(0);\n    // Initialize or reset additional game state here\n    console.log('Game Started!');\n  };\n\n  // Handler when the game is over\n  const handleGameOver = () => {\n    setIsGameOver(true);\n    setGameStarted(false);\n    console.log('Game Over!');\n  };\n\n  // Handler to restart the game\n  const restartGame = () => {\n    setScore(0);\n    setLives(3);\n    setCoins(0);\n    setIsGameOver(false);\n    setGameStarted(true);\n    console.log('Game Restarted!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      title: \"Duckling Game\",\n      score: score,\n      lives: lives,\n      coins: coins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), isGameOver ?\n      /*#__PURE__*/\n      // Show MainScreen when the game is over\n      _jsxDEV(MainScreen, {\n        onRestart: restartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : gameStarted ?\n      /*#__PURE__*/\n      // Show GameBoard when the game is active\n      _jsxDEV(GameBoard, {\n        setScore: setScore,\n        setLives: setLives,\n        setCoins: setCoins,\n        score: score,\n        lives: lives,\n        coins: coins,\n        onGameOver: handleGameOver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Show welcome message when the game hasn't started\n      _jsxDEV(\"div\", {\n        style: welcomeStyle,\n        children: \"Welcome! Click \\\"Start Game\\\" to begin.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameFooter, {\n      onStart: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n// Style for the welcome message\n_s(App, \"abTosA8QZtU3zfPbQfZMhHoyvHk=\");\n_c = App;\nconst welcomeStyle = {\n  flex: 1,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontSize: '24px',\n  color: '#555'\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GameHeader","GameBoard","Sidebar","GameFooter","MainScreen","jsxDEV","_jsxDEV","App","_s","score","setScore","lives","setLives","coins","setCoins","gameStarted","setGameStarted","isGameOver","setIsGameOver","startGame","console","log","handleGameOver","restartGame","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onRestart","onGameOver","style","welcomeStyle","onStart","_c","flex","display","justifyContent","alignItems","fontSize","color","$RefreshReg$"],"sources":["E:/project/duckling-game/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from 'react';\nimport GameHeader from './components/GameHeader';\nimport GameBoard from './components/GameBoard';\nimport Sidebar from './components/Sidebar';\nimport GameFooter from './components/GameFooter';\nimport MainScreen from './components/MainScreen'; // New component\nimport './styles/App.css';\n\nconst App = () => {\n  // State variables\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [coins, setCoins] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  // Handler to start the game\n  const startGame = () => {\n    setGameStarted(true);\n    setIsGameOver(false);\n    setScore(0);\n    setLives(3);\n    setCoins(0);\n    // Initialize or reset additional game state here\n    console.log('Game Started!');\n  };\n\n  // Handler when the game is over\n  const handleGameOver = () => {\n    setIsGameOver(true);\n    setGameStarted(false);\n    console.log('Game Over!');\n  };\n\n  // Handler to restart the game\n  const restartGame = () => {\n    setScore(0);\n    setLives(3);\n    setCoins(0);\n    setIsGameOver(false);\n    setGameStarted(true);\n    console.log('Game Restarted!');\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Game Header */}\n      <GameHeader title=\"Duckling Game\" score={score} lives={lives} coins={coins} />\n      \n      <div className=\"content\">\n        {/* Sidebar */}\n        <Sidebar />\n\n        {/* Main Content Area */}\n        {isGameOver ? (\n          // Show MainScreen when the game is over\n          <MainScreen onRestart={restartGame} />\n        ) : gameStarted ? (\n          // Show GameBoard when the game is active\n          <GameBoard\n            setScore={setScore}\n            setLives={setLives}\n            setCoins={setCoins}\n            score={score}\n            lives={lives}\n            coins={coins}\n            onGameOver={handleGameOver}\n          />\n        ) : (\n          // Show welcome message when the game hasn't started\n          <div style={welcomeStyle}>\n            Welcome! Click \"Start Game\" to begin.\n          </div>\n        )}\n      </div>\n\n      {/* Game Footer */}\n      <GameFooter onStart={startGame} />\n    </div>\n  );\n};\n\n// Style for the welcome message\nconst welcomeStyle = {\n  flex: 1,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontSize: '24px',\n  color: '#555',\n};\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMoB,SAAS,GAAGA,CAAA,KAAM;IACtBH,cAAc,CAAC,IAAI,CAAC;IACpBE,aAAa,CAAC,KAAK,CAAC;IACpBR,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACX;IACAM,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,aAAa,CAAC,IAAI,CAAC;IACnBF,cAAc,CAAC,KAAK,CAAC;IACrBI,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B,CAAC;;EAED;EACA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBb,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXI,aAAa,CAAC,KAAK,CAAC;IACpBF,cAAc,CAAC,IAAI,CAAC;IACpBI,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5BnB,OAAA,CAACN,UAAU;MAAC0B,KAAK,EAAC,eAAe;MAACjB,KAAK,EAAEA,KAAM;MAACE,KAAK,EAAEA,KAAM;MAACE,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9ExB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAEtBnB,OAAA,CAACJ,OAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGVb,UAAU;MAAA;MACT;MACAX,OAAA,CAACF,UAAU;QAAC2B,SAAS,EAAER;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACpCf,WAAW;MAAA;MACb;MACAT,OAAA,CAACL,SAAS;QACRS,QAAQ,EAAEA,QAAS;QACnBE,QAAQ,EAAEA,QAAS;QACnBE,QAAQ,EAAEA,QAAS;QACnBL,KAAK,EAAEA,KAAM;QACbE,KAAK,EAAEA,KAAM;QACbE,KAAK,EAAEA,KAAM;QACbmB,UAAU,EAAEV;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;MAAA;MAEF;MACAxB,OAAA;QAAK2B,KAAK,EAAEC,YAAa;QAAAT,QAAA,EAAC;MAE1B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNxB,OAAA,CAACH,UAAU;MAACgC,OAAO,EAAEhB;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;;AAED;AAAAtB,EAAA,CA1EMD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA2ET,MAAM2B,YAAY,GAAG;EACnBG,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE,QAAQ;EACpBC,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,eAAenC,GAAG;AAAC,IAAA6B,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}