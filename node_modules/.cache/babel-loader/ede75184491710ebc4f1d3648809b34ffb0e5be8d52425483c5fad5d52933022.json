{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\duckling-game\\\\src\\\\components\\\\MCQModal.js\",\n  _s = $RefreshSig$();\n// src/components/MCQModal.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './MCQModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCQModal = ({\n  questionData,\n  onAnswer\n}) => {\n  _s();\n  const {\n    question,\n    options,\n    correctOption,\n    isBonus\n  } = questionData;\n  const modalRef = useRef(null);\n  const firstButtonRef = useRef(null);\n  const [selected, setSelected] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  useEffect(() => {\n    // Focus the first button when the modal opens\n    if (firstButtonRef.current) {\n      firstButtonRef.current.focus();\n    }\n\n    // Prevent scrolling on the background\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, []);\n  const handleOptionClick = selectedOption => {\n    setSelected(selectedOption);\n    const correct = selectedOption === correctOption;\n    setIsCorrect(correct);\n    onAnswer(correct);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      // Optionally, handle closing the modal with the Escape key\n      // For now, we'll do nothing\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    onKeyDown: handleKeyDown,\n    ref: modalRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isBonus ? 'Bonus Question!' : 'Question'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(opt),\n          ref: index === 0 ? firstButtonRef : null,\n          disabled: selected !== null,\n          className: selected ? opt === correctOption ? 'correct' : opt === selected ? 'incorrect' : '' : '',\n          children: opt\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), !isBonus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"warning-text\",\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Incorrect answers will cost you a life!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MCQModal, \"soLhMyJtW+WbuFWakv33tS6rV3c=\");\n_c = MCQModal;\nexport default MCQModal;\nvar _c;\n$RefreshReg$(_c, \"MCQModal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","MCQModal","questionData","onAnswer","_s","question","options","correctOption","isBonus","modalRef","firstButtonRef","selected","setSelected","isCorrect","setIsCorrect","current","focus","document","body","style","overflow","handleOptionClick","selectedOption","correct","handleKeyDown","e","key","className","role","onKeyDown","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","index","onClick","disabled","marginTop","_c","$RefreshReg$"],"sources":["E:/project/duckling-game/src/components/MCQModal.js"],"sourcesContent":["// src/components/MCQModal.js\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './MCQModal.css';\r\n\r\nconst MCQModal = ({ questionData, onAnswer }) => {\r\n  const { question, options, correctOption, isBonus } = questionData;\r\n  const modalRef = useRef(null);\r\n  const firstButtonRef = useRef(null);\r\n  const [selected, setSelected] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Focus the first button when the modal opens\r\n    if (firstButtonRef.current) {\r\n      firstButtonRef.current.focus();\r\n    }\r\n\r\n    // Prevent scrolling on the background\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, []);\r\n\r\n  const handleOptionClick = (selectedOption) => {\r\n    setSelected(selectedOption);\r\n    const correct = selectedOption === correctOption;\r\n    setIsCorrect(correct);\r\n    onAnswer(correct);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Escape') {\r\n      // Optionally, handle closing the modal with the Escape key\r\n      // For now, we'll do nothing\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"modal-overlay\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      onKeyDown={handleKeyDown}\r\n      ref={modalRef}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <h2>{isBonus ? 'Bonus Question!' : 'Question'}</h2>\r\n        <p>{question}</p>\r\n        <div className=\"options\">\r\n          {options.map((opt, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleOptionClick(opt)}\r\n              ref={index === 0 ? firstButtonRef : null}\r\n              disabled={selected !== null}\r\n              className={\r\n                selected\r\n                  ? opt === correctOption\r\n                    ? 'correct'\r\n                    : opt === selected\r\n                    ? 'incorrect'\r\n                    : ''\r\n                  : ''\r\n              }\r\n            >\r\n              {opt}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {/* Display additional info based on question type */}\r\n        {!isBonus && (\r\n          <p className=\"warning-text\" style={{ marginTop: '10px' }}>\r\n            Incorrect answers will cost you a life!\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCQModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}